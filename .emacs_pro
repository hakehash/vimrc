(defun
    (insert-prev-line n
        (setq n (current-indent))
        (beginning-of-line)
        (newline-and-backup)
        (to-col n)
    )
    (insert-next-line
        (end-of-line)
        (newline-and-indent)
    )
    (pop-out-of-emacs
        (write-modified-files)
        (pause-emacs)
    )
    (to-buffer
        (pop-to-buffer (get-tty-buffer ": to-buffer "))
    )
    (previous-next-window
        (next-window)
        (previous-page)
        (previous-window)
        (novalue)
    )
    (insert-current-time
        (insert-string(current-time))
    )
    (goto-buffer
        (pop-to-buffer(arg 1 "Buffer name?"))
    )
    (repeat-skip-words n
        (setq n (arg 1 "Repeat times?"))
        (while (> n 0)
            (setq n (- n 1))
            (forward-word)
        )
    )
)
(autoload "new-compile-it" "newcompile.ml")
(autoload "incremental-search" "incl-search.ml")
(autoload "reverse-incremental-search" "incr-search.ml")
(autoload "dired" "dired.ml")
(autoload "new-shell" "process.ml")
(autoload "spell" "spell.ml")
(autoload "elec-c-mode" "elec-c.ml")
(setq ctrlchar-with-^ 1)
(setq visible-bell 1)
(setq wrap-long-lines 1)
(setq silently-kill-processes 1)
(setq backup-before-writing 1)
(setq checkpoint-frequency 400)
(setq track-eol-on-^N-^P O)
(load "time")
(setq ships-bells 1)
(bind-to-key "insert-prev-line" "\ep")
(bind-to-key "insert-next-line" "\en")
(bind-to-key "re-query-replace-string" "\eq")
(bind-to-key "new-compile-it" "\^X\^E")
(bind-to-key "pop-out-of-emacs" "\eg")
(bind-to-key "incremental-search" "\^S")
(bind-to-key "reverse-incremental-search" "\^R")
(bind-to-key "rmail" "\^Xr")
(bind-to-key "smail" "\^Xm")
(bind-to-key "shell" "\e-")
(bind-to-key "previous-next-window" "\^Xv")
(auto-execute "elec-c-mode" "*.c")
(auto-execute "elec-c-mode" "*.h")
(time)
(shell)

